---
import { getLangFromUrl, useTranslations, getLocalizedPath } from '../utils/i18n';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const navItems = [
  { label: t('nav.home'), href: getLocalizedPath('/', lang) },
  { label: t('nav.about'), href: getLocalizedPath('/about', lang) },
];

// Normalize current path for language switcher
const rawPath = Astro.url.pathname;
// Remove a leading /ja (only the first occurrence) for base English path
const basePath = rawPath.replace(/^\/ja(?=\/|$)/, '') || '/';
// English URL (default language has no prefix)
const enHref = basePath;
// Japanese URL: ensure exactly one /ja prefix
const jaHref = basePath === '/' ? '/ja' : `/ja${basePath}`;
---

<nav class="mb-10">
  <div class="flex items-center justify-between py-4">
    <a href={getLocalizedPath('/', lang)} class="text-xl font-bold">{t('site.title')}</a>
    <div class="flex items-center space-x-8">
      <ul class="flex space-x-8">
        {
          navItems.map(item => (
            <li>
              <a href={item.href} class="hover:text-blue-600 dark:hover:text-blue-400">
                {item.label}
              </a>
            </li>
          ))
        }
      </ul>
      <div class="flex space-x-2 text-sm">
        <a
          href={enHref}
          class={`px-2 py-1 rounded ${lang === 'en' ? 'bg-blue-600 text-white' : 'text-gray-600 hover:text-blue-600'}`}
        >
          EN
        </a>
        <a
          href={jaHref}
          class={`px-2 py-1 rounded ${lang === 'ja' ? 'bg-blue-600 text-white' : 'text-gray-600 hover:text-blue-600'}`}
        >
          JA
        </a>
      </div>
    </div>
  </div>
</nav>
